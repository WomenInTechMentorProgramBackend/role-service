openapi: 3.0.1
info:
  contact:
    email: wit2022.v1@gmail.com>
  description: This is a sample server role-service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger role-service
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: http://medicalcenter.roleservice/v1
tags:
- description: Users
  name: User
- description: Users roles
  name: role
- description: Roles permissions
  name: permission
paths:
  /createUser:
    post:
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User object that needs to be added to the service
        required: true
      responses:
        "405":
          content: {}
          description: Invalid input
      summary: Add a new user to the service
      tags:
      - user
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /updateUser:
    put:
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User object that needs to be added to the service
        required: true
      responses:
        "400":
          content: {}
          description: Invalid ID supplied
        "404":
          content: {}
          description: User not found
        "405":
          content: {}
          description: Validation exception
      summary: Update an existing user
      tags:
      - user
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /user/findByExternalID/{externalID}:
    get:
      operationId: findUserByExternalID
      parameters:
      - description: External id that need to be considered for filter
        in: path
        name: externalID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          content: {}
          description: Invalid externalID value
      summary: Finds User by external id
      tags:
      - user
      x-accepts: application/json
  /user/deleteByExternalID/{externalID}:
    delete:
      operationId: deleteUser
      parameters:
      - description: External id that need to be considered for filter
        in: path
        name: externalID
        required: true
        schema:
          type: string
      responses:
        "400":
          content: {}
          description: Invalid user name value
      summary: Deletes a user
      tags:
      - user
      x-accepts: application/json
  /createRole:
    post:
      operationId: addRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        description: Role object that needs to be added to the service
        required: true
      responses:
        "405":
          content: {}
          description: Invalid input
      summary: Add a new role to the service
      tags:
      - role
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /updateRole:
    put:
      operationId: updateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Role object that needs to be added to the service
        required: true
      responses:
        "400":
          content: {}
          description: Invalid roles name supplied
        "404":
          content: {}
          description: Roles name not found
        "405":
          content: {}
          description: Validation exception
      summary: Update an existing role
      tags:
      - role
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /role/findByName/{rolesName}:
    get:
      operationId: findRoleByRolesName
      parameters:
      - description: Roles name that need to be considered for filter
        in: path
        name: rolesName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          content: {}
          description: Invalid roles name value
      summary: Finds Role by roles name
      tags:
      - role
      x-accepts: application/json
  /role/deleteByRolesName/{rolesName}:
    delete:
      operationId: deleteRole
      parameters:
      - description: Roles name that need to be considered for filter
        in: path
        name: rolesName
        required: true
        schema:
          type: string
      responses:
        "400":
          content: {}
          description: Invalid roles name value
      summary: Deletes a role
      tags:
      - role
      x-accepts: application/json
  /createPermission:
    post:
      operationId: addPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
        description: Permission object that needs to be added to the service
        required: true
      responses:
        "405":
          content: {}
          description: Invalid input
      summary: Add a new permission to the service
      tags:
      - permission
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /updatePermission:
    put:
      operationId: updatePermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
        description: Permission object that needs to be added to the service
        required: true
      responses:
        "400":
          content: {}
          description: Invalid roles name supplied
        "404":
          content: {}
          description: Roles name not found
        "405":
          content: {}
          description: Validation exception
      summary: Update an existing permission
      tags:
      - permission
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /permission/findByName/{permissionName}:
    get:
      operationId: findPermissionByPermissionsName
      parameters:
      - description: Permission name that need to be considered for filter
        in: path
        name: permissionName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
        "400":
          content: {}
          description: Invalid roles name value
      summary: Finds permission by permission name
      tags:
      - Permission
      x-accepts: application/json
  /user/deleteByPermissionsName/{PermissionsName}:
    delete:
      operationId: deletePermission
      parameters:
      - description: Permissions name that need to be considered for filter
        in: path
        name: PermissionsName
        required: true
        schema:
          type: string
      responses:
        "400":
          content: {}
          description: Invalid Permissions name value
      summary: Deletes a permission
      tags:
      - permission
      x-accepts: application/json
components:
  schemas:
    User:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        updatedBy: updatedBy
        role:
          createdAt: 2000-01-23T04:56:07.000+00:00
          updatedBy: updatedBy
          createdBy: createdBy
          permissions:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            updatedBy: updatedBy
            createdBy: createdBy
            name: name
            description: description
            id: 1
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            updatedBy: updatedBy
            createdBy: createdBy
            name: name
            description: description
            id: 1
            updatedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 6
          updatedAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        externalId: externalId
        id: 0
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        externalId:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        role:
          $ref: '#/components/schemas/Role'
      type: object
      xml:
        name: User
    Role:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        updatedBy: updatedBy
        createdBy: createdBy
        permissions:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          updatedBy: updatedBy
          createdBy: createdBy
          name: name
          description: description
          id: 1
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          updatedBy: updatedBy
          createdBy: createdBy
          name: name
          description: description
          id: 1
          updatedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: 6
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
      type: object
      xml:
        name: Role
    Permission:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        updatedBy: updatedBy
        createdBy: createdBy
        name: name
        description: description
        id: 1
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
      type: object
      xml:
        name: Permission
    ApiResponse:
      properties:
        code:
          format: int32
          type: integer
        type:
          type: string
        message:
          type: string
      type: object
x-original-swagger-version: "2.0"

